-- 코드를 입력하세요
WITH SEOUL AS(
    SELECT REST_ID FROM REST_INFO
    WHERE ADDRESS LIKE "서울%"
)

, AVG_SCORE AS(
    SELECT REST_ID, ROUND(AVG(REVIEW_SCORE), 2) AS SCORE FROM REST_REVIEW
    GROUP BY REST_ID
)

, SEOUL_SCORE AS (
    SELECT REST_ID, SCORE FROM AVG_SCORE
    WHERE REST_ID IN (SELECT REST_ID FROM SEOUL)
)


SELECT SS.REST_ID,
       RI.REST_NAME,
       RI.FOOD_TYPE,
       RI.FAVORITES,
       RI.ADDRESS,
       SS.SCORE
FROM SEOUL_SCORE SS
LEFT JOIN REST_INFO RI
ON SS.REST_ID = RI.REST_ID
ORDER BY SS.SCORE DESC, RI.FAVORITES DESC;

-- 코드를 입력하세요
WITH SEOUL AS(
    SELECT REST_ID FROM REST_INFO
    WHERE ADDRESS LIKE "서울%"
)

SELECT RR.REST_ID,
       RI.REST_NAME,
       RI.FOOD_TYPE,
       RI.FAVORITES,
       RI.ADDRESS,
       ROUND(AVG(RR.REVIEW_SCORE), 2) AS SCORE
FROM REST_REVIEW RR
LEFT JOIN REST_INFO RI
ON RR.REST_ID = RI.REST_ID
GROUP BY RR.REST_ID
HAVING RR.REST_ID IN (SELECT REST_ID FROM SEOUL)
ORDER BY SCORE DESC, RI.FAVORITES DESC;

-- 코드를 입력하세요
WITH SEOUL AS(
    SELECT REST_ID FROM REST_INFO
    WHERE ADDRESS LIKE "서울%"
)

SELECT RR.REST_ID,
       RI.REST_NAME,
       RI.FOOD_TYPE,
       RI.FAVORITES,
       RI.ADDRESS,
       ROUND(AVG(RR.REVIEW_SCORE), 2) AS SCORE
FROM REST_REVIEW RR
LEFT JOIN REST_INFO RI
ON RR.REST_ID = RI.REST_ID
WHERE RR.REST_ID IN (SELECT REST_ID FROM SEOUL)
GROUP BY RR.REST_ID
ORDER BY SCORE DESC, RI.FAVORITES DESC;